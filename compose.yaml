x-shared-env: &shared-env
  APP_ENV: development
  LOG_LEVEL: debug
  # Valkey
  KV_INIT_ADDRESS: ${KV_INIT_ADDRESS:-kv:6379}
  KV_USERNAME: ${KV_USERNAME:-kv}
  KV_PASSWORD: ${KV_PASSWORD:-kv}
  KV_CLIENTNAME: ${KV_CLIENTNAME:-api}
  KV_EXPIRATION: ${KV_EXPIRATION:-3600}
  # Postgres
  DB_USER: ${DB_USER:-postgres}
  DB_PASSWORD: ${DB_PASSWORD:-postgres}
  DB_NAME: ${DB_NAME:-app}

x-front-env: &front-env
  VITE_API_URL: https://myserver.localhost/api

x-api-env: &api-env
  <<: *shared-env
  ALLOW_DOMAIN: myserver.localhost # caddy config (`.docker/caddy/conf`)
  ALLOW_ORIGIN: https://myserver.localhost # caddy config (`.docker/caddy/conf`)

services:
  front:
    build:
      context: .
      dockerfile: ./docker/front/Dockerfile
      target: develop
    command: ["pnpm", "run", "dev", "--host", "0.0.0.0"]
    volumes:
      - ./apps/front:/app
    ports:
      - 5173:5173
    environment:
      <<: *front-env

  api:
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
      target: develop
    working_dir: /go/src/app
    command: ["go", "tool", "air"]
    environment:
      <<: *api-env
    volumes:
      - ./apps/api:/go/src/app
    ports:
      - 8080:8080

  kv:
    image: valkey/valkey:8-alpine
    ports:
      - "6379:6379"
    environment:
      <<: *shared-env
    volumes:
      - ./docker/kv/valkey.conf:/usr/local/etc/valkey/valkey.conf
    command: >-
      sh -c "valkey-server /usr/local/etc/valkey/valkey.conf"

  db:
    image: postgres:alpine
    environment:
      <<: *shared-env
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-app}
    volumes:
      # - ./app/db/postgres/data:/var/lib/postgresql/data
      - ./apps/api/db/postgres/init:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432

  caddy:
    image: caddy:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/caddy/conf:/etc/caddy
      - caddy_data:/data
    depends_on:
      - front
      - api

volumes:
  caddy_data:
